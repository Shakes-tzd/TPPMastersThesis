Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.9.14/x64/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.9.14/x64/lib/python3.9/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.9.14/x64/lib/python3.9/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/hostedtoolcache/Python/3.9.14/x64/lib/python3.9/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/hostedtoolcache/Python/3.9.14/x64/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.9.14/x64/lib/python3.9/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.9.14/x64/lib/python3.9/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.9.14/x64/lib/python3.9/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
fig = go.Figure()
fig.add_trace(go.Bar(
    name='GMA 2018 Estimate',
    x=['GMA 2018 Estimate'], y=[df_est['gma_2015'].loc['actual']],
    error_y=dict(type='percent', symmetric=False,
            value=50,
            valueminus=50)
))
fig.add_trace(go.Bar(
    name='AGC Estimate',
    x=['AGC Estimate'], y=[df_est['AGC_2018'].loc['actual']],
    error_y=dict(type='percent', symmetric=False,
            value=50,
            valueminus=50)
))
fig.add_trace(go.Bar(
    name='Top Down Estimate',
    x=['Top Down Estimate'], y=[df_est['TPP_2015'].loc['actual']],
    error_y=dict(type='percent', symmetric=False,
            value=133,
            valueminus=90)
))

fig.update_layout(barmode='group')
fig.update_traces(width=0.5)
fig.update_layout(
    autosize=False,
     width=700,
     height=400,
    template="simple_white",
    margin={"r":0,"t":0,"l":60,"b":30},
    yaxis =  {'showgrid': True} 
)

fig.update_layout(
                  xaxis_type='category',
                  yaxis_type='linear',
                  yaxis=dict(
                      title="Hg (t/y)",
                      titlefont_size=16,
                      tickfont_size=14,),
                  bargap=0.00, # gap between bars of adjacent location coordinates.
                  legend=dict(
        title=None, orientation="h", y=1.0, yanchor="bottom", x=0.5, xanchor="center"))
fig.update_yaxes(nticks=10)
fig.show()
fig_name='all_asgm_hgEstimates_001.svg'
path=fig_path+fig_name
pio.write_image(fig, path,format='svg')
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
Cell [0;32mIn [6], line 49[0m
[1;32m     47[0m fig_name[38;5;241m=[39m[38;5;124m'[39m[38;5;124mall_asgm_hgEstimates_001.svg[39m[38;5;124m'[39m
[1;32m     48[0m path[38;5;241m=[39mfig_path[38;5;241m+[39mfig_name
[0;32m---> 49[0m [43mpio[49m[38;5;241;43m.[39;49m[43mwrite_image[49m[43m([49m[43mfig[49m[43m,[49m[43m [49m[43mpath[49m[43m,[49m[38;5;28;43mformat[39;49m[38;5;241;43m=[39;49m[38;5;124;43m'[39;49m[38;5;124;43msvg[39;49m[38;5;124;43m'[39;49m[43m)[49m

File [0;32m/opt/hostedtoolcache/Python/3.9.14/x64/lib/python3.9/site-packages/plotly/io/_kaleido.py:267[0m, in [0;36mwrite_image[0;34m(fig, file, format, scale, width, height, validate, engine)[0m
[1;32m    251[0m             [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[1;32m    252[0m                 [38;5;124;03m"""[39;00m
[1;32m    253[0m [38;5;124;03mCannot infer image type from output path '{file}'.[39;00m
[0;32m   (...)[0m
[1;32m    261[0m                 )
[1;32m    262[0m             )
[1;32m    264[0m     [38;5;66;03m# Request image[39;00m
[1;32m    265[0m     [38;5;66;03m# -------------[39;00m
[1;32m    266[0m     [38;5;66;03m# Do this first so we don't create a file if image conversion fails[39;00m
[0;32m--> 267[0m     img_data [38;5;241m=[39m [43mto_image[49m[43m([49m
[1;32m    268[0m [43m        [49m[43mfig[49m[43m,[49m
[1;32m    269[0m [43m        [49m[38;5;28;43mformat[39;49m[38;5;241;43m=[39;49m[38;5;28;43mformat[39;49m[43m,[49m
[1;32m    270[0m [43m        [49m[43mscale[49m[38;5;241;43m=[39;49m[43mscale[49m[43m,[49m
[1;32m    271[0m [43m        [49m[43mwidth[49m[38;5;241;43m=[39;49m[43mwidth[49m[43m,[49m
[1;32m    272[0m [43m        [49m[43mheight[49m[38;5;241;43m=[39;49m[43mheight[49m[43m,[49m
[1;32m    273[0m [43m        [49m[43mvalidate[49m[38;5;241;43m=[39;49m[43mvalidate[49m[43m,[49m
[1;32m    274[0m [43m        [49m[43mengine[49m[38;5;241;43m=[39;49m[43mengine[49m[43m,[49m
[1;32m    275[0m [43m    [49m[43m)[49m
[1;32m    277[0m     [38;5;66;03m# Open file[39;00m
[1;32m    278[0m     [38;5;66;03m# ---------[39;00m
[1;32m    279[0m     [38;5;28;01mif[39;00m path [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[1;32m    280[0m         [38;5;66;03m# We previously failed to make sense of `file` as a pathlib object.[39;00m
[1;32m    281[0m         [38;5;66;03m# Attempt to write to `file` as an open file descriptor.[39;00m

File [0;32m/opt/hostedtoolcache/Python/3.9.14/x64/lib/python3.9/site-packages/plotly/io/_kaleido.py:133[0m, in [0;36mto_image[0;34m(fig, format, width, height, scale, validate, engine)[0m
[1;32m    131[0m     [38;5;66;03m# Raise informative error message if Kaleido is not installed[39;00m
[1;32m    132[0m     [38;5;28;01mif[39;00m scope [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[0;32m--> 133[0m         [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[1;32m    134[0m             [38;5;124;03m"""[39;00m
[1;32m    135[0m [38;5;124;03mImage export using the "kaleido" engine requires the kaleido package,[39;00m
[1;32m    136[0m [38;5;124;03mwhich can be installed using pip:[39;00m
[1;32m    137[0m [38;5;124;03m    $ pip install -U kaleido[39;00m
[1;32m    138[0m [38;5;124;03m"""[39;00m
[1;32m    139[0m         )
[1;32m    141[0m     [38;5;66;03m# Validate figure[39;00m
[1;32m    142[0m     [38;5;66;03m# ---------------[39;00m
[1;32m    143[0m     fig_dict [38;5;241m=[39m validate_coerce_fig_to_dict(fig, validate)

[0;31mValueError[0m: 
Image export using the "kaleido" engine requires the kaleido package,
which can be installed using pip:
    $ pip install -U kaleido

ValueError: 
Image export using the "kaleido" engine requires the kaleido package,
which can be installed using pip:
    $ pip install -U kaleido


